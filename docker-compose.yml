services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-prostaff_api_development}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Sidekiq
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails API
  api:
    build: .
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      RAILS_ENV: ${RAILS_ENV:-development}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      CORS_ORIGINS: ${CORS_ORIGINS}
      RIOT_API_KEY: ${RIOT_API_KEY}
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    ports:
      - "${API_PORT:-3333}:3000"
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -c "
        rm -f tmp/pids/server.pid &&
        bundle exec rails db:migrate &&
        bundle exec rails server -b 0.0.0.0 -p 3000
      "

  # Sidekiq for background jobs
  sidekiq:
    build: .
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      RAILS_ENV: ${RAILS_ENV:-development}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bundle exec sidekiq

volumes:
  postgres_data:
  redis_data:
  bundle_cache: