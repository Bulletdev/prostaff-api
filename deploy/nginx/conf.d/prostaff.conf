# ProStaff API - Nginx Server Configuration

# HTTP - Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name api.prostaff.gg staging-api.prostaff.gg;

    # Health check endpoint (HTTP OK)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS - Production
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.prostaff.gg;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logs
    access_log /var/log/nginx/prostaff-access.log main;
    error_log /var/log/nginx/prostaff-error.log warn;

    # Root directory
    root /app/public;

    # Rate limiting
    limit_req zone=api burst=50 nodelay;

    # Serve static files directly
    location ~ ^/(assets|packs|images|javascripts|stylesheets|system)/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
        access_log off;
        try_files $uri @app;
    }

    # Health check
    location /up {
        proxy_pass http://prostaff_api;
        proxy_set_header Host $host;
        access_log off;
    }

    # API Documentation (Swagger)
    location /api-docs {
        proxy_pass http://prostaff_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy to Rails app
    location / {
        proxy_pass http://prostaff_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /app/public;
        internal;
    }
}

# HTTPS - Staging
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name staging-api.prostaff.gg;

    # SSL Configuration (same as production)
    ssl_certificate /etc/nginx/ssl/staging-fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/staging-privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Rest of config same as production
    root /app/public;
    access_log /var/log/nginx/staging-access.log main;
    error_log /var/log/nginx/staging-error.log warn;

    location / {
        proxy_pass http://prostaff_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
